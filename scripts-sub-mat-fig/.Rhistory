ggsave2x('../plots-meas/dig.prop.supMat2', plot = pf, height = 8, width = 6)
f1 <- ggplot(ds, aes(TS.mn, e.rel.150, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab(expression(paste(NH[3],' (% of TAN)'))) +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
f2 <- ggplot(ds, aes(pH.lab.mn, e.rel.150, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('pH') + ylab(expression(paste(NH[3],' (% of TAN)'))) +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
f3 <- ggplot(ds, aes(area.perc.mn, e.rel.150, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Exposed surface area (%)') + ylab(expression(paste(NH[3],' (% of TAN)'))) +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
f4 <- ggplot(ds, aes(n.mn, e.rel.150, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('n') + ylab(expression(paste(NH[3],' (% of TAN)'))) +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
mat <- matrix(c(1, 2,
3, 4),
nrow = 2, byrow = TRUE)
pf <- grid.arrange(f1, f2, f3, f4, layout_matrix = mat)
ggsave2x('../plots-meas/dig.prop.supMat2', plot = pf, height = 8, width = 6)
f6 <- ggplot(ds, aes(TS.mn, n.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('m') +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
mat <- matrix(c(1, 2,
3, 4,
5, 6),
nrow = 3, byrow = TRUE)
pf <- grid.arrange(f1, f2, f3, f4, f5, f6, layout_matrix = mat)
ggsave2x('../plots-meas/dig.prop.supMat3', plot = pf, height = 10, width = 7)
f1 <- ggplot(ds, aes(TS.mn, e.rel.150, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab(expression(paste(NH[3],' (% of TAN)'))) +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
f2 <- ggplot(ds, aes(pH.lab.mn, e.rel.150, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('pH') + ylab(expression(paste(NH[3],' (% of TAN)'))) +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
f3 <- ggplot(ds, aes(area.perc.mn, e.rel.150, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Exposed surface area (%)') + ylab(expression(paste(NH[3],' (% of TAN)'))) +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
f4 <- ggplot(ds, aes(n.mn, e.rel.150, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('m') + ylab(expression(paste(NH[3],' (% of TAN)'))) +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
mat <- matrix(c(1, 2,
3, 4),
nrow = 2, byrow = TRUE)
pf <- grid.arrange(f1, f2, f3, f4, layout_matrix = mat)
ggsave2x('../plots-meas/dig.prop.supMat2', plot = pf, height = 8, width = 6)
f5 <- ggplot(ds, aes(TS.mn, area.perc.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('Exposed surface area (%)') +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
f6 <- ggplot(ds, aes(TS.mn, n.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('m') +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
f7 <- ggplot(ds, aes(TS.mn, K.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('K') +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
mat <- matrix(c(1, 2,
3),
nrow = 2, byrow = TRUE)
View(ds)
library(patchwork)
# keep guide settings in each plot (they will be collected)
f5 <- ggplot(ds, aes(TS.mn, area.perc.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('Exposed surface area (%)') +
guides(shape = guide_legend(nrow = 2, order = 1),
color = guide_legend(nrow = 1, order = 2)) +
theme(legend.title = element_blank(), legend.box = "vertical")
f6 <- ggplot(ds, aes(TS.mn, n.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('m') +
guides(shape = guide_legend(nrow = 2, order = 1),
color = guide_legend(nrow = 1, order = 2))
f7 <- ggplot(ds, aes(TS.mn, K.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('K') +
guides(shape = guide_legend(nrow = 2, order = 1),
color = guide_legend(nrow = 1, order = 2))
# arrange: f5 and f6 side-by-side, f7 below spanning both columns.
combined <- ((f5 + f6) / f7) +
plot_layout(guides = "collect")  # collect one legend from all plots
# apply theme for collected legend (stacked boxes)
combined <- combined & theme(
legend.position = "bottom",
legend.title = element_blank(),
legend.box = "vertical"   # stack separate legend boxes vertically
)
# save
ggsave("../plots-meas/dig.prop.supMat3.png", plot = combined, width = 6, height = 8, dpi = 300)
# Example plots (with guides separated)
f5 <- ggplot(ds, aes(TS.mn, area.perc.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab("Dry matter (%)") + ylab("Exposed surface area (%)") +
guides(shape = guide_legend(nrow = 2, order = 1),
color = guide_legend(nrow = 1, order = 2))
f6 <- ggplot(ds, aes(TS.mn, n.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab("Dry matter (%)") + ylab("m") +
guides(shape = guide_legend(nrow = 2, order = 1),
color = guide_legend(nrow = 1, order = 2))
f7 <- ggplot(ds, aes(TS.mn, K.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab("Dry matter (%)") + ylab("K") +
guides(shape = guide_legend(nrow = 2, order = 1),
color = guide_legend(nrow = 1, order = 2))
# Arrange: f5 and f6 side by side, f7 below them
combined <- ((f5 | f6) / f7) +
plot_layout(guides = "collect", heights = c(1, 1)) # equal heights
# Apply theme for shared legend
combined <- combined & theme(
legend.position = "bottom",
legend.title = element_blank(),
legend.box = "vertical"
)
# Save
ggsave("../plots-meas/dig.prop.supMat3.png", plot = combined,
width = 6, height = 8, dpi = 300)
f5 <- ggplot(ds, aes(TS.mn, area.perc.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('Exposed surface area (%)') +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
f6 <- ggplot(ds, aes(TS.mn, n.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('m') +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
f7 <- ggplot(ds, aes(TS.mn, K.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('K') +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
f8 <- ggplot(ds, aes(TS.mn, pH.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('pH') +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
mat <- matrix(c(1, 2,
3, 4),
nrow = 2, byrow = TRUE)
pf <- grid.arrange(f5, f6, f7, f8, layout_matrix = mat)
f8 <- ggplot(ds, aes(TS.mn, pH.lab.mn, color = dig1, shape = trial.ID)) +
geom_point() +
theme_bw() +
xlab('Dry matter (%)') + ylab('pH') +
theme(legend.position = 'bottom', legend.title = element_blank(), legend.box = 'vertical') +
guides(shape = guide_legend(nrow = 2, order = 1), color = guide_legend(nrow = 1, order = 2))
mat <- matrix(c(1, 2,
3, 4),
nrow = 2, byrow = TRUE)
pf <- grid.arrange(f5, f6, f7, f8, layout_matrix = mat)
ggsave2x('../plots-meas/dig.prop.supMat3', plot = pf, height = 8, width = 6)
setwd("~/GitHub/Pedersen-2025-MAG/scripts-sub-mat-fig")
rm(list = ls())
source('functions.R')
source('packages.R')
source('load.R')
?fread
??fread
rm(list = ls())
source('functions.R')
source('packages.R')
source('load.R')
source('combine.R')
ds$e.rel.150 <- ds$e.rel.150 * 100
dsd <- subset(ds, treat1 %in% c('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'))
# grouping digestates, pig slurry and cattle slurry separately and repeating plot above
IDs <- c(`A` =  'Digestate',
`B` =  'Digestate',
`C` =  'Digestate',
`D` =  'Digestate',
`E` =  'Digestate',
`F` =  'Digestate',
`G` =  'Digestate',
`H` =  'Digestate',
`I` =  'Digestate',
`Cattle A` =  'Cattle',
`Cattle B` =  'Cattle',
`Cattle C` =  'Cattle',
`Pig A` =  'Pig',
`Pig B` =  'Pig',
`Pig C` =  'Pig')
ds[, dig1 := IDs[dig]]
dsd[, dig1 := IDs[dig]]
IDs <- c(`D1` =  'Trial 1',
`D2` =  'Trial 2',
`D3` =  'Trial 3',
`D4` =  'Trial 4',
`D5` =  'Trial 5')
ds[, trial.ID := IDs[new.ID.x]]
dsd[, trial.ID := IDs[new.ID.x]]
f11 <- ggplot(dsd, aes(area.perc.mn, e.rel.150, color = dig1, shape = trial.ID)) +
geom_point(color = '#00BA38') +
theme_bw() +
ylab(expression(paste(NH[3],' (% of TAN)'))) + xlab('Exposed surface area (%)') +
theme(legend.position = 'bottom', legend.title = element_blank()) +
guides(shape = guide_legend(nrow = 2))
f22 <- ggplot(dsd, aes(area.perc.mn, TS.mn, color = dig1, shape = trial.ID)) +
geom_point(color = '#00BA38') +
theme_bw() +
ylab('Dry matter (%)') + xlab('Exposed surface area (%)') +
theme(legend.position = 'bottom', legend.title = element_blank()) +
guides(shape = guide_legend(nrow = 2))
mat <- matrix(c(1, 2),
nrow = 1)
pf <- grid.arrange(f11, f22, layout_matrix = mat)
??grid.arrange
library(gridExtra)
pf <- grid.arrange(f11, f22, layout_matrix = mat)
View(df.prop)
View(ds)
# Plots for Ramiran presentation october 2025
# long format:
df.long <- melt(
df.prop,
id.vars = 'dig1',
measure.vars = c('TS.mn', 'K.mn', 'n.mn', 'pH.lab.mn'),
variable.name = 'parameter',
value.name = 'value'
)
# Plots for Ramiran presentation october 2025
# long format:
ds.long <- melt(
ds,
id.vars = 'dig1',
measure.vars = c('TS.mn', 'K.mn', 'n.mn', 'pH.lab.mn'),
variable.name = 'parameter',
value.name = 'value'
)
ggplot(ds.long, aes(parameter, value)) +
geom_bar() +
facet_wrap(~ measure.vars)
ggplot(ds.long, aes(parameter, value)) +
geom_bar() +
facet_wrap(~ parameter)
ds$parameter
ds.long$parameter
ggplot(ds.long, aes(parameter, value)) +
geom_bar()
ggplot(df.long, aes(x = parameter, y = value, fill = dig1)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Parameter", y = "Value", fill = "Digestate") +
theme_minimal(base_size = 14)
ggplot(ds.long, aes(x = parameter, y = value, fill = dig1)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Parameter", y = "Value", fill = "Digestate") +
theme_minimal(base_size = 14)
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot()
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot() +
facet_grid(~ parameter)
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot() +
facet_grid(~ parameter, scales = 'free_y')
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot() +
facet_grid(~ parameter, scales = 'free')
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot() +
facet_wrap(~ parameter, scales = 'free')
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot() +
facet_wrap(~ parameter, scales = 'free', ncol = 4)
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.7) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_minimal(base_size = 14)
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.4) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_minimal(base_size = 14)
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_minimal(base_size = 14)
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_bw()
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_minimal(base_size = 14)
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
theme(axis.text.x = element_blank()) +
#  labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_minimal(base_size = 14)
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
theme(axis.text.x = element_blank()) +
#  labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_minimal(base_size = 14)
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_minimal(base_size = 14)
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_minimal(base_size = 14) +
theme(legend.position = 'none')
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_minimal(base_size = 14) +
labs(x = NULL, y = NULL)
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_minimal(base_size = 14) +
labs(x = NULL, y = NULL) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(ds.long, aes(parameter, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_bw() +
labs(x = NULL, y = NULL) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
names <- c(`TS.mn` =  'DM (%)',
`K.mn` =  'K (viscosity)',
`n.mn` =  'm (viscosity)',
`pH.lab.mn` =  'pH')
ds.long[, names := names[parameter]]
ggplot(ds.long, aes(names, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
labs(x = "Parameter", y = "Value", color = "Digestate") +
theme_bw() +
labs(x = NULL, y = NULL) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(ds.long, aes(names, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
theme_bw() +
labs(x = NULL, y = NULL) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(ds.long, aes(names, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ parameter, scales = 'free', ncol = 4) +
theme_bw() +
labs(x = NULL, y = NULL, color = NULL) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(ds.long, aes(names, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig1), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ names, scales = 'free', ncol = 4) +
theme_bw() +
labs(x = NULL, y = NULL, color = NULL) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
dig2 <- c(`Digestate` =  'Digestate',
`Pig` =  'Pig slurry',
`Cattle` = 'Cattle slurry')
ds.long[, dig2 := dig2[dig1]]
ggplot(ds.long, aes(names, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig2), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ names, scales = 'free', ncol = 4) +
theme_bw() +
labs(x = NULL, y = NULL, color = NULL) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave2x('../plots-meas/dig.prop.Ramiran', plot = pf, height = 8, width = 6)
ggplot(ds.long, aes(names, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig2), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ names, scales = 'free', ncol = 4) +
theme_bw() +
labs(x = NULL, y = NULL, color = NULL) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave2x('../plots-meas/dig.prop.Ramiran', plot = pf, height = 8, width = 6)
rm(list = ls())
source('functions.R')
source('packages.R')
source('load.R')
source('combine.R')
ds$e.rel.150 <- ds$e.rel.150 * 100
dsd <- subset(ds, treat1 %in% c('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'))
# grouping digestates, pig slurry and cattle slurry separately and repeating plot above
IDs <- c(`A` =  'Digestate',
`B` =  'Digestate',
`C` =  'Digestate',
`D` =  'Digestate',
`E` =  'Digestate',
`F` =  'Digestate',
`G` =  'Digestate',
`H` =  'Digestate',
`I` =  'Digestate',
`Cattle A` =  'Cattle',
`Cattle B` =  'Cattle',
`Cattle C` =  'Cattle',
`Pig A` =  'Pig',
`Pig B` =  'Pig',
`Pig C` =  'Pig')
ds[, dig1 := IDs[dig]]
dsd[, dig1 := IDs[dig]]
IDs <- c(`D1` =  'Trial 1',
`D2` =  'Trial 2',
`D3` =  'Trial 3',
`D4` =  'Trial 4',
`D5` =  'Trial 5')
ds[, trial.ID := IDs[new.ID.x]]
dsd[, trial.ID := IDs[new.ID.x]]
# Plots for Ramiran presentation october 2025
# long format:
ds.long <- melt(
ds,
id.vars = 'dig1',
measure.vars = c('TS.mn', 'K.mn', 'n.mn', 'pH.lab.mn'),
variable.name = 'parameter',
value.name = 'value'
)
names <- c(`TS.mn` =  'DM (%)',
`K.mn` =  'K (viscosity)',
`n.mn` =  'm (viscosity)',
`pH.lab.mn` =  'pH')
ds.long[, names := names[parameter]]
dig2 <- c(`Digestate` =  'Digestate',
`Pig` =  'Pig slurry',
`Cattle` = 'Cattle slurry')
ds.long[, dig2 := dig2[dig1]]
ggplot(ds.long, aes(names, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig2), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ names, scales = 'free', ncol = 4) +
theme_bw() +
labs(x = NULL, y = NULL, color = NULL) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave2x('../plots-meas/dig.prop.Ramiran', height = 8, width = 6)
ggsave2x('../plots-meas/dig.prop.Ramiran', height = 4, width = 6)
ggsave2x('../plots-meas/dig.prop.Ramiran', height = 3, width = 7)
ggsave2x('../plots-meas/dig.prop.Ramiran', height = 2.5, width = 5.5)
ggplot(ds.long, aes(names, value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = dig2), width = 0.2, size = 2, alpha = 0.5) +
facet_wrap(~ names, scales = 'free', ncol = 4) +
theme_bw() +
labs(x = NULL, y = NULL, color = NULL) +
theme(legend.position = "left") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave2x('../plots-meas/dig.prop.Ramiran', height = 2.5, width = 6)
ggsave2x('../plots-meas/dig.prop.Ramiran', height = 2, width = 6)
